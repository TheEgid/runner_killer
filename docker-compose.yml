services:
  main-applic:
    build:
      context: main-applic
      dockerfile: Dockerfile
    container_name: main-applic_container
    ports:
      - "127.0.0.1:3006:3006"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      verdaccio:
        condition: service_healthy
    restart: on-failure
    env_file:
      - .env
    environment:
      TZ: "Europe/Moscow"
      REDIS_PASSW: "${REDIS_PASSW}"
      NEXT_BASE_PATH: "/ui"
      DATABASE_URL: "${DATABASE_URL}"
      NPM_CONFIG_REGISTRY: "http://verdaccio:4873"
      PNPM_HOME: "/root/.pnpm-store"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:3006/ui/api/healthcheck"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s
    volumes:
      - ./main-applic/public/temporary:/app/public/temporary
      - pnpm_cache:/root/.pnpm-store

  nginx:
    image: nginx:1.27.5-alpine
    container_name: nginx_container
    ports:
      - "80:80"
    volumes:
      - ./main-applic/public/temporary:/opt/files
      - ./log/report:/opt/report
      - ./.htpasswd:/opt/.htpasswd
      - ./nginx_config/nginx.conf:/etc/nginx/nginx.conf
      - ./log/nginx:/var/log/nginx
    environment:
      TZ: Europe/Moscow
    depends_on:
      main-applic:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--silent", "--fail", "http://localhost:80/health"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s

  postgres:
    build:
      context: postgres-db
      dockerfile: Dockerfile
    container_name: db_postgres_container
    volumes:
      - database_volume:/var/lib/postgresql/data
      - ./main-applic/prisma:/app
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      TZ: "Europe/Moscow"
      POSTGRES_DB: "${MY_DB_NAME_DEV}"
      POSTGRES_USER: "${MY_DB_USER_DEV}"
      POSTGRES_PASSWORD: "${MY_DB_PASSWORD_DEV}"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "cd / && pg_isready -U ${MY_DB_USER_DEV} -d ${MY_DB_NAME_DEV}",
        ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  prefect-service:
    build: ./python-applic
    container_name: python_app_container
    ports:
      - "127.0.0.1:4200:4200"
    environment:
      TZ: "Europe/Moscow"
      PREFECT_API_URL: "http://127.0.0.1:4200/api"
      # PREFECT_UI_API_URL: "http://192.168.1.77/api/python"
      PREFECT_UI_API_URL: "http://nginx/api/python"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:4200/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: on-failure
    env_file:
      - .env
    volumes:
      - ./python-applic/data:/app/data
      - prefect_data:/app/prefect

  redis:
    image: redis:7-alpine
    container_name: redis_container
    environment:
      TZ: "Europe/Moscow"
      REDIS_PASSW: "${REDIS_PASSW}"
    command: ["redis-server", "--requirepass", "${REDIS_PASSW}"]
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a $REDIS_PASSW ping | grep PONG"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  verdaccio:
    image: verdaccio/verdaccio
    container_name: verdaccio_container
    # ports:
      # - "4873:4873"  # üëà –Ω–∞—Ä—É–∂—É –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    environment:
      TZ: "Europe/Moscow"
    volumes:
      - ./verdaccio/storage:/verdaccio/storage
      - ./verdaccio/conf:/verdaccio/conf
      - ./verdaccio/plugins:/verdaccio/plugins
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1:4873/-/ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 15s

volumes:
  database_volume:
  prefect_data:
  pnpm_cache:
  verdaccio_storage: {}
