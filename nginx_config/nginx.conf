# Main Nginx process configuration
worker_processes auto;             # Automatically determine the number of worker processes
worker_rlimit_nofile 8192;         # Maximum number of open files per worker

# Event processing configuration
events {
    worker_connections 2048;       # Maximum connections per worker
    multi_accept on;               # Accept multiple connections per event notification
    use epoll;                     # Use efficient event processing method
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Custom log format definition
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Performance optimization settings
    sendfile on;                   # Use efficient file sending
    tcp_nopush on;                 # Optimize TCP packet handling
    tcp_nodelay on;                # Disable Nagle's algorithm
    keepalive_timeout 65;          # Keep connections alive for 65 seconds
    types_hash_max_size 2048;      # Increase MIME types hash table size

    server_tokens off;             # Hide Nginx version in responses for security

    # Gzip compression configuration
    gzip on;
    gzip_vary on;                  # Add Vary: Accept-Encoding header
    gzip_min_length 1024;          # Minimum file size to compress
    gzip_proxied any;              # Compress responses for proxied requests
    gzip_comp_level 6;             # Compression level (balance between CPU and size)
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # File caching configuration for performance
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Proxy cache path configuration
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=proxy_cache:10m max_size=1g inactive=60m;

    # Rate limiting and connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=50r/s;

    # Backend server groups
    upstream main-applic_server {
        server main-applic:3006 max_fails=3 fail_timeout=30s;
        keepalive 32;              # Keep connections to upstream server alive
    }

    upstream prefect_server {
        server prefect-service:4200 max_fails=3 fail_timeout=30s;
        keepalive 32;              # Keep connections to upstream server alive
    }

    # WebSocket protocol support
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen 80;
        listen [::]:80;            # IPv6 support
        server_name localhost;

        # Debug headers for troubleshooting
        add_header X-Debug-Backend $upstream_addr always;
        add_header X-Debug-Cache $upstream_cache_status always;

        # Client request limits
        client_max_body_size 11m;  # Maximum request body size
        client_body_timeout 60s;   # Timeout for receiving client body
        client_header_timeout 60s; # Timeout for receiving client headers
        send_timeout 60s;          # Timeout for sending response to client

        # Error handling configuration
        proxy_intercept_errors on;
        error_page 500 502 503 504 /50x.html;
        error_page 404 /404.html;

        # Error page locations
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;              # Only accessible for internal redirects
        }

        location = /404.html {
            root /usr/share/nginx/html;
            internal;              # Only accessible for internal redirects
        }

        # 401 Error handler - redirects to login page
        location @error401 {
            return 302 $scheme://$host/ui/auth-pages/login;
        }

        # Internal Authentication Check Endpoint
        location = /auths {
            internal;              # Only accessible for internal auth_request directives
            proxy_pass http://main-applic_server/ui/api/user-auth/authcheck;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header Cookie $http_cookie;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Original-Method $request_method;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # Healthcheck endpoint (Unprotected)
        location /health {
            access_log off;        # Don't log health checks
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Static temporary files (Unprotected)
        location /temporary/ {
            alias /opt/files/;
            access_log off;        # Don't log static file access
            expires 30d;           # Set cache expiration
            add_header Cache-Control "public, immutable";
        }

        # Security rule: PHP files inside temporary are forbidden
        location ~ ^/temporary/.*\.php$ {
            deny all;
            return 404;
        }

        # GoAccess report (Protected by Basic Auth)
        location /goaccess_web.html {
            auth_basic "Restricted Area";
            auth_basic_user_file /opt/.htpasswd;
            alias /opt/report/report.html;
            index report.html;
        }

        # Next.js UI Application (Unprotected)
        location ^~ /ui {
            proxy_pass http://main-applic_server;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Prefix /ui;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_buffering off;
            proxy_intercept_errors on;
            # CORS headers for API
            add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS, HEAD" always;
            add_header Access-Control-Allow-Headers "Authorization, Origin, X-Requested-With, Content-Type, Accept" always;
            # Handle OPTIONS preflight requests
            if ($request_method = OPTIONS) {
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
        }

        # Next.js Static Assets (Cached)
        location ~ ^/ui/(static|_next/static)/ {
            proxy_pass http://main-applic_server;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            expires 1y;            # Long cache for static assets
            add_header Cache-Control "public, immutable, max-age=31536000";
            access_log off;        # Don't log static asset access
            proxy_buffering on;    # Enable buffering for static content
        }

        # Python API (Protected with auth_request)
        location /api/python/ {
            auth_request /auths;   # Authenticate via internal endpoint
            error_page 401 = @error401;
            proxy_pass http://prefect_server/api/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            # CORS headers for API
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS, HEAD" always;
            add_header Access-Control-Allow-Headers "Authorization, Origin, X-Requested-With, Content-Type, Accept" always;
            # Handle OPTIONS preflight requests
            if ($request_method = OPTIONS) {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, PATCH, DELETE';
                add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With';
                add_header 'Access-Control-Max-Age' 1728000; # Preflight cache for 20 days
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            # Rate limiting
            limit_req zone=req_limit_per_ip burst=100 nodelay;
            limit_conn conn_limit_per_ip 10;
        }

        # UI Settings endpoint (Protected)
        location /ui-settings {
            auth_request /auths;   # Authenticate via internal endpoint
            error_page 401 = @error401;
            proxy_pass http://prefect_server/ui-settings;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            # CORS headers for API
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS, HEAD" always;
            add_header Access-Control-Allow-Headers "Authorization, Origin, X-Requested-With, Content-Type, Accept" always;
            # Handle OPTIONS preflight requests
            if ($request_method = OPTIONS) {
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
            # Rate limiting
            limit_req zone=req_limit_per_ip burst=100 nodelay;
            limit_conn conn_limit_per_ip 10;
        }

        # Assets endpoint (Protected)
        location /assets/ {
            auth_request /auths;   # Authenticate via internal endpoint
            error_page 401 = @error401;
            proxy_pass http://prefect_server/assets/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # expires 1y;            # Long cache for assets
            add_header Cache-Control "public, immutable";
            access_log off;        # Don't log static asset access
        }

        # Icons endpoint (Unprotected, cached)
        location /ico/ {
            proxy_pass http://prefect_server/ico/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            expires 1y;            # Long cache for icons
            add_header Cache-Control "public, immutable";
            access_log off;        # Don't log icon access
        }

        # Default Location / Prefect UI (Protected with WebSocket support)
        location / {
            auth_request /auths;   # Authenticate via internal endpoint
            error_page 401 = @error401;
            proxy_cache proxy_cache;
            proxy_cache_valid 200 10m;
            proxy_cache_valid 404 1m;
            proxy_redirect off;
            proxy_pass http://prefect_server/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            # WebSocket headers
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_buffering off;
            # Rate limiting
            limit_req zone=req_limit_per_ip burst=100 nodelay;
            limit_conn conn_limit_per_ip 10;
        }

        # SEO/Browser files (Unprotected, cached)
        location ~ /(sitemaps.xml|sitemap-0.xml|robots.txt) {
            proxy_pass http://main-applic_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            expires 1d;            # Cache for one day
            add_header Cache-Control "public";
        }

        # Favicon (Unprotected, cached)
        location /favicon.ico {
            proxy_pass http://main-applic_server/favicon.ico;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            expires 1y;            # Long cache for favicon
            add_header Cache-Control "public, immutable";
            access_log off;        # Don't log favicon access
        }

        # Security/Denial Rules - Block access to sensitive files and directories
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
            return 404;
        }
        location ~* \.php$ { deny all; return 404; }      # Block PHP files
        location ~* /\.env { deny all; return 404; }      # Block .env files
        location ~* (\.git|\.svn|\.htaccess|\.htpasswd) { deny all; return 404; }
    }
}
